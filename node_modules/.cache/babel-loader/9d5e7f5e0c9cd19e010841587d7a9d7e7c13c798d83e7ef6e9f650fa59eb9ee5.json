{"ast":null,"code":"import{supabase}from'../config/supabase';// Fetch all categories\nexport const fetchCategories=async()=>{try{const{data,error}=await supabase.from('categories').select('*').order('name');if(error)throw error;return data||[];}catch(error){console.error('Error fetching categories:',error);return[];}};// Fetch all projects\nexport const fetchProjects=async()=>{try{const{data,error}=await supabase.from('projects').select(\"\\n        *,\\n        category:categories(name, slug, color, icon)\\n      \").order('created_at',{ascending:false});if(error)throw error;return data||[];}catch(error){console.error('Error fetching projects:',error);return[];}};// Fetch projects by category\nexport const fetchProjectsByCategory=async categorySlug=>{try{const{data,error}=await supabase.from('projects').select(\"\\n        *,\\n        category:categories(name, slug, color, icon)\\n      \").eq('category.slug',categorySlug).order('created_at',{ascending:false});if(error)throw error;return data||[];}catch(error){console.error('Error fetching projects by category:',error);return[];}};// Fetch single project by ID\nexport const fetchProjectById=async projectId=>{try{const{data,error}=await supabase.from('projects').select(\"\\n        *,\\n        category:categories(name, slug, color, icon)\\n      \").eq('id',projectId).single();if(error)throw error;return data;}catch(error){console.error('Error fetching project:',error);return null;}};// Search projects\nexport const searchProjects=async searchTerm=>{try{const{data,error}=await supabase.from('projects').select(\"\\n        *,\\n        category:categories(name, slug, color, icon)\\n      \").or(\"title.ilike.%\".concat(searchTerm,\"%, description.ilike.%\").concat(searchTerm,\"%, technologies.cs.{\").concat(searchTerm,\"}\")).order('created_at',{ascending:false});if(error)throw error;return data||[];}catch(error){console.error('Error searching projects:',error);return[];}};","map":{"version":3,"names":["supabase","fetchCategories","data","error","from","select","order","console","fetchProjects","ascending","fetchProjectsByCategory","categorySlug","eq","fetchProjectById","projectId","single","searchProjects","searchTerm","or","concat"],"sources":["/Users/zani/Documents/GitHub/techpillar-portfolio/src/services/supabaseService.js"],"sourcesContent":["import { supabase } from '../config/supabase';\n\n// Fetch all categories\nexport const fetchCategories = async () => {\n  try {\n    const { data, error } = await supabase\n      .from('categories')\n      .select('*')\n      .order('name');\n    \n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    return [];\n  }\n};\n\n// Fetch all projects\nexport const fetchProjects = async () => {\n  try {\n    const { data, error } = await supabase\n      .from('projects')\n      .select(`\n        *,\n        category:categories(name, slug, color, icon)\n      `)\n      .order('created_at', { ascending: false });\n    \n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error fetching projects:', error);\n    return [];\n  }\n};\n\n// Fetch projects by category\nexport const fetchProjectsByCategory = async (categorySlug) => {\n  try {\n    const { data, error } = await supabase\n      .from('projects')\n      .select(`\n        *,\n        category:categories(name, slug, color, icon)\n      `)\n      .eq('category.slug', categorySlug)\n      .order('created_at', { ascending: false });\n    \n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error fetching projects by category:', error);\n    return [];\n  }\n};\n\n// Fetch single project by ID\nexport const fetchProjectById = async (projectId) => {\n  try {\n    const { data, error } = await supabase\n      .from('projects')\n      .select(`\n        *,\n        category:categories(name, slug, color, icon)\n      `)\n      .eq('id', projectId)\n      .single();\n    \n    if (error) throw error;\n    return data;\n  } catch (error) {\n    console.error('Error fetching project:', error);\n    return null;\n  }\n};\n\n// Search projects\nexport const searchProjects = async (searchTerm) => {\n  try {\n    const { data, error } = await supabase\n      .from('projects')\n      .select(`\n        *,\n        category:categories(name, slug, color, icon)\n      `)\n      .or(`title.ilike.%${searchTerm}%, description.ilike.%${searchTerm}%, technologies.cs.{${searchTerm}}`)\n      .order('created_at', { ascending: false });\n    \n    if (error) throw error;\n    return data || [];\n  } catch (error) {\n    console.error('Error searching projects:', error);\n    return [];\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}