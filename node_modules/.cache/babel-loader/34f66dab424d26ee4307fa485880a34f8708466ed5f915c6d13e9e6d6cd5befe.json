{"ast":null,"code":"// Email service for TechPillar contact form\n// This service handles sending professional emails to techpillaritsolutions@gmail.com\n\nimport emailjs from '@emailjs/browser';\n\n// Email configuration\nconst EMAIL_CONFIG = {\n  to: 'techpillaritsolutions@gmail.com',\n  from: 'zany0381@gmail.com',\n  // This will be your sending email\n  subjectPrefix: 'New Service Inquiry: '\n};\n\n// WORKING EMAILJS CONFIGURATION - Replace these with your actual IDs\n// To get these IDs, follow the QUICK_EMAIL_SETUP.md guide\nconst EMAILJS_CONFIG = {\n  serviceId: 'service_uqc060v',\n  // Your new service ID\n  templateId: 'template_pqsssxd',\n  // Your new template ID\n  userId: 'QxzG4zH4VMy0vokbE' // Your new user ID\n};\n\n// TEST MODE: Set this to false when you have real EmailJS credentials\nconst TEST_MODE = false; // Real EmailJS credentials configured\n\n// Professional email template generator\nexport const generateEmailTemplate = (formData, serviceOptions) => {\n  var _serviceOptions$find;\n  const serviceLabel = ((_serviceOptions$find = serviceOptions.find(opt => opt.value === formData.service)) === null || _serviceOptions$find === void 0 ? void 0 : _serviceOptions$find.label) || formData.service;\n  const company = formData.company || 'Individual';\n  const timestamp = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  return {\n    to: EMAIL_CONFIG.to,\n    from: EMAIL_CONFIG.from,\n    replyTo: formData.email,\n    // Allow direct reply to the customer\n    subject: `${EMAIL_CONFIG.subjectPrefix}${serviceLabel} - ${company}`,\n    html: `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>New Service Inquiry - TechPillar</title>\n        <style>\n          * { margin: 0; padding: 0; box-sizing: border-box; }\n          \n          body { \n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n            line-height: 1.6; \n            color: #1a202c; \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            margin: 0; \n            padding: 20px;\n          }\n          \n          .email-container { \n            max-width: 650px; \n            margin: 0 auto; \n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\n            border: 1px solid rgba(255, 255, 255, 0.2);\n          }\n          \n          .header { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 40px 30px; \n            text-align: center; \n            position: relative;\n            overflow: hidden;\n          }\n          \n          .header::before {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -50%;\n            width: 200%;\n            height: 200%;\n            background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"25\" cy=\"25\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"75\" cy=\"75\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"50\" cy=\"10\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"10\" cy=\"60\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"90\" cy=\"40\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>');\n            opacity: 0.3;\n            animation: float 20s ease-in-out infinite;\n          }\n          \n          @keyframes float {\n            0%, 100% { transform: translateY(0px) rotate(0deg); }\n            50% { transform: translateY(-20px) rotate(180deg); }\n          }\n          \n          .header h1 { \n            margin: 0 0 15px 0; \n            font-size: 32px; \n            font-weight: 800;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header p { \n            margin: 0; \n            font-size: 18px; \n            opacity: 0.95;\n            font-weight: 300;\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header-icon {\n            font-size: 48px;\n            margin-bottom: 20px;\n            display: block;\n            position: relative;\n            z-index: 2;\n            animation: bounce 2s ease-in-out infinite;\n          }\n          \n          @keyframes bounce {\n            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n            40% { transform: translateY(-10px); }\n            60% { transform: translateY(-5px); }\n          }\n          \n          .content { \n            padding: 40px 30px; \n            background: white;\n          }\n          \n          .priority-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #ff6b6b, #ee5a24);\n            color: white;\n            padding: 8px 20px;\n            border-radius: 25px;\n            font-size: 14px;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 30px;\n            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);\n            animation: pulse 2s infinite;\n          }\n          \n          @keyframes pulse {\n            0% { box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3); }\n            50% { box-shadow: 0 4px 25px rgba(255, 107, 107, 0.6); }\n            100% { box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3); }\n          }\n          \n          .info-grid {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n          }\n          \n          .info-card {\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            padding: 20px;\n            border-radius: 15px;\n            border-left: 4px solid #667eea;\n            transition: all 0.3s ease;\n          }\n          \n          .info-card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.15);\n          }\n          \n          .info-label {\n            font-size: 12px;\n            font-weight: 600;\n            color: #64748b;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 8px;\n          }\n          \n          .info-value {\n            font-size: 16px;\n            font-weight: 600;\n            color: #1e293b;\n          }\n          \n          .service-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #10b981, #059669);\n            color: white;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 16px;\n            font-weight: 600;\n            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\n          }\n          \n          .message-section {\n            background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n            padding: 25px;\n            border-radius: 15px;\n            margin-bottom: 30px;\n            border: 1px solid #e2e8f0;\n          }\n          \n          .message-label {\n            font-size: 14px;\n            font-weight: 600;\n            color: #475569;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 15px;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          \n          .message-content {\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            border-left: 4px solid #667eea;\n            font-size: 16px;\n            line-height: 1.6;\n            color: #334155;\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n          }\n          \n          .cta-section { \n            text-align: center; \n            margin: 40px 0; \n            padding: 30px;\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            border-radius: 20px;\n            border: 2px solid #e2e8f0;\n          }\n          \n          .cta-title {\n            font-size: 24px;\n            font-weight: 700;\n            color: #1e293b;\n            margin-bottom: 20px;\n          }\n          \n          .cta-button { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 18px 36px; \n            text-decoration: none; \n            border-radius: 50px; \n            display: inline-block; \n            font-weight: 600;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n            border: none;\n            cursor: pointer;\n          }\n          \n          .cta-button:hover { \n            transform: translateY(-3px);\n            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\n          }\n          \n          .footer { \n            text-align: center; \n            margin-top: 40px; \n            color: #64748b; \n            font-size: 14px; \n            padding: 30px;\n            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n            color: white;\n          }\n          \n          .footer h3 {\n            color: #f8fafc;\n            margin-bottom: 15px;\n            font-size: 18px;\n          }\n          \n          .footer p {\n            margin: 8px 0;\n            opacity: 0.8;\n          }\n          \n          .techpillar-logo {\n            font-size: 24px;\n            font-weight: 800;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            margin-bottom: 10px;\n          }\n          \n          .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 20px;\n            margin: 30px 0;\n          }\n          \n          .stat-item {\n            text-align: center;\n            padding: 20px;\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 15px;\n            backdrop-filter: blur(10px);\n          }\n          \n          .stat-number {\n            font-size: 28px;\n            font-weight: 800;\n            color: #667eea;\n            margin-bottom: 5px;\n          }\n          \n          .stat-label {\n            font-size: 12px;\n            color: #94a3b8;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n          }\n          \n          @media (max-width: 600px) {\n            .info-grid { grid-template-columns: 1fr; }\n            .stats-grid { grid-template-columns: 1fr; }\n            .header h1 { font-size: 24px; }\n            .content { padding: 20px; }\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <span class=\"header-icon\">🚀</span>\n            <h1>New Service Inquiry</h1>\n            <p>TechPillar has received a new service request</p>\n          </div>\n          \n          <div class=\"content\">\n            <div style=\"text-align: center; margin-bottom: 30px;\">\n              <div class=\"priority-badge\">🔥 High Priority Inquiry</div>\n            </div>\n            \n            <div class=\"info-grid\">\n              <div class=\"info-card\">\n                <div class=\"info-label\">👤 Contact Person</div>\n                <div class=\"info-value\">${formData.name}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">📧 Email Address</div>\n                <div class=\"info-value\">${formData.email}</div>\n              </div>\n              \n              ${formData.phone ? `\n              <div class=\"info-card\">\n                <div class=\"info-label\">📱 Phone Number</div>\n                <div class=\"info-value\">${formData.countryCode ? `${formData.countryCode} ${formData.phone}` : formData.phone}</div>\n              </div>\n              ` : ''}\n              \n              ${formData.company ? `\n              <div class=\"info-card\">\n                <div class=\"info-label\">🏢 Company</div>\n                <div class=\"info-value\">${formData.company}</div>\n              </div>\n              ` : ''}\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">🎯 Service Interest</div>\n                <div class=\"service-badge\">${serviceLabel}</div>\n              </div>\n            </div>\n            \n            <div class=\"message-section\">\n              <div class=\"message-label\">\n                💬 Project Details\n              </div>\n              <div class=\"message-content\">\n                ${formData.message.replace(/\\n/g, '<br>')}\n              </div>\n            </div>\n            \n            <div class=\"stats-grid\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">500+</div>\n                <div class=\"stat-label\">Projects Delivered</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">50+</div>\n                <div class=\"stat-label\">Happy Clients</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">24/7</div>\n                <div class=\"stat-label\">Support</div>\n              </div>\n            </div>\n            \n            <div class=\"cta-section\">\n              <div class=\"cta-title\">Ready to respond to this inquiry?</div>\n              <a href=\"mailto:${formData.email}?subject=Re: ${EMAIL_CONFIG.subjectPrefix}${serviceLabel}\" class=\"cta-button\">\n                📧 Reply to ${formData.name}\n              </a>\n              <p style=\"margin: 15px 0 0 0; font-size: 14px; color: #64748b;\">\n                Click the button above to send a direct reply\n              </p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <div class=\"techpillar-logo\">TechPillar</div>\n            <h3>Technology Solutions</h3>\n            <p><strong>This inquiry was sent from the TechPillar contact form</strong></p>\n            <p>📅 Received on ${timestamp}</p>\n            <p>📍 Form submitted from TechPillar website</p>\n            <p>🌐 <a href=\"https://techpillar.com\" style=\"color: #667eea;\">techpillar.com</a></p>\n            <hr style=\"border: none; border-top: 1px solid #475569; margin: 20px 0;\">\n            <p style=\"font-size: 12px; opacity: 0.7;\">\n              Empowering businesses through innovative technology solutions\n            </p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n🚀 NEW SERVICE INQUIRY - TechPillar\n\n🔥 HIGH PRIORITY INQUIRY\n\nCONTACT INFORMATION:\n👤 Contact Person: ${formData.name}\n📧 Email Address: ${formData.email}\n${formData.phone ? `📱 Phone Number: ${formData.countryCode ? `${formData.countryCode} ${formData.phone}` : formData.phone}\\n` : ''}${formData.company ? `🏢 Company: ${formData.company}\\n` : ''}🎯 Service Interest: ${serviceLabel}\n\nPROJECT DETAILS:\n${formData.message}\n\n---\n📅 Received on: ${timestamp}\n📍 Form submitted from TechPillar website\n🌐 techpillar.com\n\nTechPillar Technology Solutions\nEmpowering businesses through innovative technology\n    `\n  };\n};\n\n// Main email sending function using EmailJS\nexport const sendContactFormEmail = async (formData, serviceOptions) => {\n  try {\n    var _serviceOptions$find4, _serviceOptions$find5;\n    // TEST MODE: If enabled, just simulate email sending\n    if (TEST_MODE) {\n      var _serviceOptions$find2, _serviceOptions$find3;\n      console.log('🧪 TEST MODE: Simulating email sending...');\n      const emailData = generateEmailTemplate(formData, serviceOptions);\n\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      console.log('📧 TEST MODE: Email would be sent to:', emailData.to);\n      console.log('📧 TEST MODE: Subject:', emailData.subject);\n      console.log('📧 TEST MODE: From:', formData.email);\n      console.log('📧 TEST MODE: Service:', (_serviceOptions$find2 = serviceOptions.find(opt => opt.value === formData.service)) === null || _serviceOptions$find2 === void 0 ? void 0 : _serviceOptions$find2.label);\n      console.log('📧 TEST MODE: Message:', formData.message);\n\n      // Show alert with email details (for testing)\n      alert(`🧪 TEST MODE: Email would be sent to techpillaritsolutions@gmail.com\\n\\nSubject: ${emailData.subject}\\nFrom: ${formData.email}\\nService: ${(_serviceOptions$find3 = serviceOptions.find(opt => opt.value === formData.service)) === null || _serviceOptions$find3 === void 0 ? void 0 : _serviceOptions$find3.label}\\n\\nTo get real emails, follow the setup guide in QUICK_EMAIL_SETUP.md`);\n      return {\n        success: true,\n        message: 'Email simulation completed (TEST MODE)',\n        emailData\n      };\n    }\n\n    // REAL EMAIL MODE: Use EmailJS\n    console.log('📧 Preparing to send email via EmailJS...');\n\n    // Check if EmailJS is properly configured\n    if (EMAILJS_CONFIG.serviceId === 'service_techpillar' || EMAILJS_CONFIG.templateId === 'template_techpillar' || EMAILJS_CONFIG.userId === 'user_techpillar') {\n      throw new Error('EmailJS not configured. Please update the EMAILJS_CONFIG with your real IDs.');\n    }\n\n    // Prepare template parameters for EmailJS\n    const templateParams = {\n      to_email: EMAIL_CONFIG.to,\n      from_name: formData.name,\n      from_email: formData.email,\n      from_phone: formData.countryCode ? `${formData.countryCode} ${formData.phone}` : formData.phone,\n      company: formData.company || 'Individual',\n      service: ((_serviceOptions$find4 = serviceOptions.find(opt => opt.value === formData.service)) === null || _serviceOptions$find4 === void 0 ? void 0 : _serviceOptions$find4.label) || formData.service,\n      message: formData.message,\n      reply_to: formData.email,\n      subject: `${EMAIL_CONFIG.subjectPrefix}${((_serviceOptions$find5 = serviceOptions.find(opt => opt.value === formData.service)) === null || _serviceOptions$find5 === void 0 ? void 0 : _serviceOptions$find5.label) || formData.service} - ${formData.company || 'Individual'}`\n    };\n    console.log('📧 Template parameters:', templateParams);\n\n    // Send email using EmailJS\n    const result = await emailjs.send(EMAILJS_CONFIG.serviceId, EMAILJS_CONFIG.templateId, templateParams, EMAILJS_CONFIG.userId);\n    console.log('✅ Email sent successfully via EmailJS:', result);\n    return {\n      success: true,\n      message: 'Email sent successfully via EmailJS',\n      result\n    };\n  } catch (error) {\n    console.error('❌ Error sending email via EmailJS:', error);\n\n    // Fallback: Try to send using the old method (simulation)\n    console.log('🔄 Falling back to simulation...');\n    try {\n      const emailData = generateEmailTemplate(formData, serviceOptions);\n\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      console.log('📧 Email data prepared (simulation):', {\n        to: emailData.to,\n        subject: emailData.subject,\n        from: emailData.from,\n        replyTo: emailData.replyTo\n      });\n      return {\n        success: true,\n        message: 'Email simulation completed (EmailJS not configured)',\n        emailData\n      };\n    } catch (fallbackError) {\n      console.error('❌ Fallback also failed:', fallbackError);\n      throw new Error('Failed to send email. Please check EmailJS configuration or contact support.');\n    }\n  }\n};\n\n// Alternative: Simple text email for basic email clients\nexport const generateSimpleEmailTemplate = (formData, serviceOptions) => {\n  var _serviceOptions$find6;\n  const serviceLabel = ((_serviceOptions$find6 = serviceOptions.find(opt => opt.value === formData.service)) === null || _serviceOptions$find6 === void 0 ? void 0 : _serviceOptions$find6.label) || formData.service;\n  return {\n    to: EMAIL_CONFIG.to,\n    from: EMAIL_CONFIG.from,\n    replyTo: formData.email,\n    subject: `${EMAIL_CONFIG.subjectPrefix}${serviceLabel} - ${formData.company || 'Individual'}`,\n    text: `\nNew Service Inquiry from TechPillar Website\n\nContact Information:\n- Name: ${formData.name}\n- Email: ${formData.email}\n${formData.company ? `- Company: ${formData.company}\\n` : ''}- Service: ${serviceLabel}\n\nMessage:\n${formData.message}\n\n---\nSent on: ${new Date().toLocaleDateString()}\nReply to: ${formData.email}\n    `\n  };\n};\n\n// Enrollment email template generator\nexport const generateEnrollmentTemplate = formData => {\n  const timestamp = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  return {\n    to: EMAIL_CONFIG.to,\n    from: EMAIL_CONFIG.from,\n    replyTo: formData.email,\n    // Allow direct reply to the student\n    subject: `🎓 New Course Enrollment - ${formData.course} - TechPillar Academy`,\n    html: `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>New Course Enrollment - TechPillar Academy</title>\n        <style>\n          * { margin: 0; padding: 0; box-sizing: border-box; }\n          \n          body { \n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n            line-height: 1.6; \n            color: #1a202c; \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            margin: 0; \n            padding: 20px;\n          }\n          \n          .email-container { \n            max-width: 650px; \n            margin: 0 auto; \n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\n            border: 1px solid rgba(255, 255, 255, 0.2);\n          }\n          \n          .header { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 40px 30px; \n            text-align: center; \n            position: relative;\n            overflow: hidden;\n          }\n          \n          .header::before {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -50%;\n            width: 200%;\n            height: 200%;\n            background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"25\" cy=\"25\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"75\" cy=\"75\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"50\" cy=\"10\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"10\" cy=\"60\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"90\" cy=\"40\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>');\n            opacity: 0.3;\n            animation: float 20s ease-in-out infinite;\n          }\n          \n          @keyframes float {\n            0%, 100% { transform: translateY(0px) rotate(0deg); }\n            50% { transform: translateY(-20px) rotate(180deg); }\n          }\n          \n          .header h1 { \n            margin: 0 0 15px 0; \n            font-size: 32px; \n            font-weight: 800;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header p { \n            margin: 0; \n            font-size: 18px; \n            opacity: 0.95;\n            font-weight: 300;\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header-icon {\n            font-size: 48px;\n            margin-bottom: 20px;\n            display: block;\n            position: relative;\n            z-index: 2;\n            animation: bounce 2s ease-in-out infinite;\n          }\n          \n          @keyframes bounce {\n            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n            40% { transform: translateY(-10px); }\n            60% { transform: translateY(-5px); }\n          }\n          \n          .content { \n            padding: 40px 30px; \n            background: white;\n          }\n          \n          .enrollment-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #10b981, #059669);\n            color: white;\n            padding: 8px 20px;\n            border-radius: 25px;\n            font-size: 14px;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 30px;\n            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\n            animation: pulse 2s infinite;\n          }\n          \n          @keyframes pulse {\n            0% { box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3); }\n            50% { box-shadow: 0 4px 25px rgba(16, 185, 129, 0.6); }\n            100% { box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3); }\n          }\n          \n          .info-grid {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n          }\n          \n          .info-card {\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            padding: 20px;\n            border-radius: 15px;\n            border-left: 4px solid #667eea;\n            transition: all 0.3s ease;\n          }\n          \n          .info-card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.15);\n          }\n          \n          .info-label {\n            font-size: 12px;\n            font-weight: 600;\n            color: #64748b;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 8px;\n          }\n          \n          .info-value {\n            font-size: 16px;\n            font-weight: 600;\n            color: #1e293b;\n          }\n          \n          .course-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #667eea, #764ba2);\n            color: white;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 16px;\n            font-weight: 600;\n            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n          }\n          \n          .message-section {\n            background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n            padding: 25px;\n            border-radius: 15px;\n            margin-bottom: 30px;\n            border: 1px solid #e2e8f0;\n          }\n          \n          .message-label {\n            font-size: 14px;\n            font-weight: 600;\n            color: #475569;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 15px;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          \n          .message-content {\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            border-left: 4px solid #667eea;\n            font-size: 16px;\n            line-height: 1.6;\n            color: #334155;\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n          }\n          \n          .academy-stats {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 20px;\n            margin: 30px 0;\n          }\n          \n          .stat-item {\n            text-align: center;\n            padding: 20px;\n            background: rgba(102, 126, 234, 0.1);\n            border-radius: 15px;\n            backdrop-filter: blur(10px);\n          }\n          \n          .stat-number {\n            font-size: 28px;\n            font-weight: 800;\n            color: #667eea;\n            margin-bottom: 5px;\n          }\n          \n          .stat-label {\n            font-size: 12px;\n            color: #94a3b8;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n          }\n          \n          .cta-section { \n            text-align: center; \n            margin: 40px 0; \n            padding: 30px;\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            border-radius: 20px;\n            border: 2px solid #e2e8f0;\n          }\n          \n          .cta-title {\n            font-size: 24px;\n            font-weight: 700;\n            color: #1e293b;\n            margin-bottom: 20px;\n          }\n          \n          .cta-button { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 18px 36px; \n            text-decoration: none; \n            border-radius: 50px; \n            display: inline-block; \n            font-weight: 600;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n            border: none;\n            cursor: pointer;\n          }\n          \n          .cta-button:hover { \n            transform: translateY(-3px);\n            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\n          }\n          \n          .footer { \n            text-align: center; \n            margin-top: 40px; \n            color: #64748b; \n            font-size: 14px; \n            padding: 30px;\n            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n            color: white;\n          }\n          \n          .footer h3 {\n            color: #f8fafc;\n            margin-bottom: 15px;\n            font-size: 18px;\n          }\n          \n          .footer p {\n            margin: 8px 0;\n            opacity: 0.8;\n          }\n          \n          .techpillar-logo {\n            font-size: 24px;\n            font-weight: 800;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            margin-bottom: 10px;\n          }\n          \n          @media (max-width: 600px) {\n            .info-grid { grid-template-columns: 1fr; }\n            .academy-stats { grid-template-columns: 1fr; }\n            .header h1 { font-size: 24px; }\n            .content { padding: 20px; }\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <span class=\"header-icon\">🎓</span>\n            <h1>New Course Enrollment</h1>\n            <p>TechPillar Academy has received a new enrollment request</p>\n          </div>\n          \n          <div class=\"content\">\n            <div style=\"text-align: center; margin-bottom: 30px;\">\n              <div class=\"enrollment-badge\">🎯 New Student Enrollment</div>\n            </div>\n            \n            <div class=\"info-grid\">\n              <div class=\"info-card\">\n                <div class=\"info-label\">👤 Student Name</div>\n                <div class=\"info-value\">${formData.name}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">📧 Email Address</div>\n                <div class=\"info-value\">${formData.email}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">📱 Phone Number</div>\n                <div class=\"info-value\">${formData.phone}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">🎯 Selected Course</div>\n                <div class=\"course-badge\">${formData.course}</div>\n              </div>\n            </div>\n            \n            ${formData.address ? `\n            <div class=\"info-card\" style=\"grid-column: 1 / -1;\">\n              <div class=\"info-label\">📍 Address</div>\n              <div class=\"info-value\">${formData.address}</div>\n            </div>\n            ` : ''}\n            \n            <div class=\"message-section\">\n              <div class=\"message-label\">\n                💭 Student Goals & Expectations\n              </div>\n              <div class=\"message-content\">\n                ${formData.message.replace(/\\n/g, '<br>')}\n              </div>\n            </div>\n            \n            <div class=\"academy-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">500+</div>\n                <div class=\"stat-label\">Students Trained</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">25+</div>\n                <div class=\"stat-label\">Expert Instructors</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">95%</div>\n                <div class=\"stat-label\">Placement Rate</div>\n              </div>\n            </div>\n            \n            <div class=\"cta-section\">\n              <div class=\"cta-title\">Ready to welcome this student?</div>\n              <a href=\"mailto:${formData.email}?subject=Welcome to TechPillar Academy - ${formData.course}\" class=\"cta-button\">\n                📧 Welcome ${formData.name}\n              </a>\n              <p style=\"margin: 15px 0 0 0; font-size: 14px; color: #64748b;\">\n                Click the button above to send a welcome message\n              </p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <div class=\"techpillar-logo\">TechPillar Academy</div>\n            <h3>Empowering Future Tech Leaders</h3>\n            <p><strong>This enrollment was submitted from the TechPillar Academy website</strong></p>\n            <p>📅 Received on ${timestamp}</p>\n            <p>📍 Form submitted from TechPillar Academy</p>\n            <p>🌐 <a href=\"https://techpillar.com/academy\" style=\"color: #667eea;\">techpillar.com/academy</a></p>\n            <hr style=\"border: none; border-top: 1px solid #475569; margin: 20px 0;\">\n            <p style=\"font-size: 12px; opacity: 0.7;\">\n              Transforming careers through cutting-edge technology education\n            </p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n🎓 NEW COURSE ENROLLMENT - TechPillar Academy\n\n🎯 NEW STUDENT ENROLLMENT\n\nSTUDENT INFORMATION:\n👤 Student Name: ${formData.name}\n📧 Email Address: ${formData.email}\n📱 Phone Number: ${formData.phone}\n🎯 Selected Course: ${formData.course}\n${formData.address ? `📍 Address: ${formData.address}\\n` : ''}\n\nSTUDENT GOALS & EXPECTATIONS:\n${formData.message}\n\n---\n📅 Received on: ${timestamp}\n📍 Form submitted from TechPillar Academy\n🌐 techpillar.com/academy\n\nTechPillar Academy\nEmpowering Future Tech Leaders\n    `\n  };\n};\n\n// Send enrollment email\nexport const sendEnrollmentEmail = async formData => {\n  if (TEST_MODE) {\n    console.log('🧪 TEST MODE: Enrollment email would be sent with:', formData);\n    return Promise.resolve();\n  }\n\n  // Check if EmailJS is properly configured\n  if (EMAILJS_CONFIG.serviceId === 'service_techpillar' || EMAILJS_CONFIG.templateId === 'template_techpillar' || EMAILJS_CONFIG.userId === 'user_techpillar') {\n    throw new Error('EmailJS not properly configured. Please update the configuration in emailService.js');\n  }\n  try {\n    const templateParams = {\n      to_email: EMAIL_CONFIG.to,\n      from_name: formData.name,\n      from_email: formData.email,\n      from_phone: formData.phone,\n      course: formData.course,\n      address: formData.address || 'Not provided',\n      message: formData.message,\n      subject: `🎓 New Course Enrollment - ${formData.course} - TechPillar Academy`\n    };\n    const response = await emailjs.send(EMAILJS_CONFIG.serviceId, EMAILJS_CONFIG.templateId, templateParams, EMAILJS_CONFIG.userId);\n    console.log('✅ Enrollment email sent successfully:', response);\n    return response;\n  } catch (error) {\n    console.error('❌ Failed to send enrollment email:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["emailjs","EMAIL_CONFIG","to","from","subjectPrefix","EMAILJS_CONFIG","serviceId","templateId","userId","TEST_MODE","generateEmailTemplate","formData","serviceOptions","_serviceOptions$find","serviceLabel","find","opt","value","service","label","company","timestamp","Date","toLocaleDateString","year","month","day","hour","minute","replyTo","email","subject","html","name","phone","countryCode","message","replace","text","sendContactFormEmail","_serviceOptions$find4","_serviceOptions$find5","_serviceOptions$find2","_serviceOptions$find3","console","log","emailData","Promise","resolve","setTimeout","alert","success","Error","templateParams","to_email","from_name","from_email","from_phone","reply_to","result","send","error","fallbackError","generateSimpleEmailTemplate","_serviceOptions$find6","generateEnrollmentTemplate","course","address","sendEnrollmentEmail","response"],"sources":["/Users/zani/Documents/GitHub/techpillar-portfolio/src/services/emailService.js"],"sourcesContent":["// Email service for TechPillar contact form\n// This service handles sending professional emails to techpillaritsolutions@gmail.com\n\nimport emailjs from '@emailjs/browser';\n\n// Email configuration\nconst EMAIL_CONFIG = {\n  to: 'techpillaritsolutions@gmail.com',\n  from: 'zany0381@gmail.com', // This will be your sending email\n  subjectPrefix: 'New Service Inquiry: '\n};\n\n// WORKING EMAILJS CONFIGURATION - Replace these with your actual IDs\n// To get these IDs, follow the QUICK_EMAIL_SETUP.md guide\nconst EMAILJS_CONFIG = {\n  serviceId: 'service_uqc060v', // Your new service ID\n  templateId: 'template_pqsssxd', // Your new template ID\n  userId: 'QxzG4zH4VMy0vokbE' // Your new user ID\n};\n\n// TEST MODE: Set this to false when you have real EmailJS credentials\nconst TEST_MODE = false; // Real EmailJS credentials configured\n\n// Professional email template generator\nexport const generateEmailTemplate = (formData, serviceOptions) => {\n  const serviceLabel = serviceOptions.find(opt => opt.value === formData.service)?.label || formData.service;\n  const company = formData.company || 'Individual';\n  const timestamp = new Date().toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  return {\n    to: EMAIL_CONFIG.to,\n    from: EMAIL_CONFIG.from,\n    replyTo: formData.email, // Allow direct reply to the customer\n    subject: `${EMAIL_CONFIG.subjectPrefix}${serviceLabel} - ${company}`,\n    html: `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>New Service Inquiry - TechPillar</title>\n        <style>\n          * { margin: 0; padding: 0; box-sizing: border-box; }\n          \n          body { \n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n            line-height: 1.6; \n            color: #1a202c; \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            margin: 0; \n            padding: 20px;\n          }\n          \n          .email-container { \n            max-width: 650px; \n            margin: 0 auto; \n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\n            border: 1px solid rgba(255, 255, 255, 0.2);\n          }\n          \n          .header { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 40px 30px; \n            text-align: center; \n            position: relative;\n            overflow: hidden;\n          }\n          \n          .header::before {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -50%;\n            width: 200%;\n            height: 200%;\n            background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"25\" cy=\"25\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"75\" cy=\"75\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"50\" cy=\"10\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"10\" cy=\"60\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"90\" cy=\"40\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>');\n            opacity: 0.3;\n            animation: float 20s ease-in-out infinite;\n          }\n          \n          @keyframes float {\n            0%, 100% { transform: translateY(0px) rotate(0deg); }\n            50% { transform: translateY(-20px) rotate(180deg); }\n          }\n          \n          .header h1 { \n            margin: 0 0 15px 0; \n            font-size: 32px; \n            font-weight: 800;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header p { \n            margin: 0; \n            font-size: 18px; \n            opacity: 0.95;\n            font-weight: 300;\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header-icon {\n            font-size: 48px;\n            margin-bottom: 20px;\n            display: block;\n            position: relative;\n            z-index: 2;\n            animation: bounce 2s ease-in-out infinite;\n          }\n          \n          @keyframes bounce {\n            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n            40% { transform: translateY(-10px); }\n            60% { transform: translateY(-5px); }\n          }\n          \n          .content { \n            padding: 40px 30px; \n            background: white;\n          }\n          \n          .priority-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #ff6b6b, #ee5a24);\n            color: white;\n            padding: 8px 20px;\n            border-radius: 25px;\n            font-size: 14px;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 30px;\n            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);\n            animation: pulse 2s infinite;\n          }\n          \n          @keyframes pulse {\n            0% { box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3); }\n            50% { box-shadow: 0 4px 25px rgba(255, 107, 107, 0.6); }\n            100% { box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3); }\n          }\n          \n          .info-grid {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n          }\n          \n          .info-card {\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            padding: 20px;\n            border-radius: 15px;\n            border-left: 4px solid #667eea;\n            transition: all 0.3s ease;\n          }\n          \n          .info-card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.15);\n          }\n          \n          .info-label {\n            font-size: 12px;\n            font-weight: 600;\n            color: #64748b;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 8px;\n          }\n          \n          .info-value {\n            font-size: 16px;\n            font-weight: 600;\n            color: #1e293b;\n          }\n          \n          .service-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #10b981, #059669);\n            color: white;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 16px;\n            font-weight: 600;\n            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\n          }\n          \n          .message-section {\n            background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n            padding: 25px;\n            border-radius: 15px;\n            margin-bottom: 30px;\n            border: 1px solid #e2e8f0;\n          }\n          \n          .message-label {\n            font-size: 14px;\n            font-weight: 600;\n            color: #475569;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 15px;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          \n          .message-content {\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            border-left: 4px solid #667eea;\n            font-size: 16px;\n            line-height: 1.6;\n            color: #334155;\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n          }\n          \n          .cta-section { \n            text-align: center; \n            margin: 40px 0; \n            padding: 30px;\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            border-radius: 20px;\n            border: 2px solid #e2e8f0;\n          }\n          \n          .cta-title {\n            font-size: 24px;\n            font-weight: 700;\n            color: #1e293b;\n            margin-bottom: 20px;\n          }\n          \n          .cta-button { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 18px 36px; \n            text-decoration: none; \n            border-radius: 50px; \n            display: inline-block; \n            font-weight: 600;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n            border: none;\n            cursor: pointer;\n          }\n          \n          .cta-button:hover { \n            transform: translateY(-3px);\n            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\n          }\n          \n          .footer { \n            text-align: center; \n            margin-top: 40px; \n            color: #64748b; \n            font-size: 14px; \n            padding: 30px;\n            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n            color: white;\n          }\n          \n          .footer h3 {\n            color: #f8fafc;\n            margin-bottom: 15px;\n            font-size: 18px;\n          }\n          \n          .footer p {\n            margin: 8px 0;\n            opacity: 0.8;\n          }\n          \n          .techpillar-logo {\n            font-size: 24px;\n            font-weight: 800;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            margin-bottom: 10px;\n          }\n          \n          .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 20px;\n            margin: 30px 0;\n          }\n          \n          .stat-item {\n            text-align: center;\n            padding: 20px;\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 15px;\n            backdrop-filter: blur(10px);\n          }\n          \n          .stat-number {\n            font-size: 28px;\n            font-weight: 800;\n            color: #667eea;\n            margin-bottom: 5px;\n          }\n          \n          .stat-label {\n            font-size: 12px;\n            color: #94a3b8;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n          }\n          \n          @media (max-width: 600px) {\n            .info-grid { grid-template-columns: 1fr; }\n            .stats-grid { grid-template-columns: 1fr; }\n            .header h1 { font-size: 24px; }\n            .content { padding: 20px; }\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <span class=\"header-icon\">🚀</span>\n            <h1>New Service Inquiry</h1>\n            <p>TechPillar has received a new service request</p>\n          </div>\n          \n          <div class=\"content\">\n            <div style=\"text-align: center; margin-bottom: 30px;\">\n              <div class=\"priority-badge\">🔥 High Priority Inquiry</div>\n            </div>\n            \n            <div class=\"info-grid\">\n              <div class=\"info-card\">\n                <div class=\"info-label\">👤 Contact Person</div>\n                <div class=\"info-value\">${formData.name}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">📧 Email Address</div>\n                <div class=\"info-value\">${formData.email}</div>\n              </div>\n              \n              ${formData.phone ? `\n              <div class=\"info-card\">\n                <div class=\"info-label\">📱 Phone Number</div>\n                <div class=\"info-value\">${formData.countryCode ? `${formData.countryCode} ${formData.phone}` : formData.phone}</div>\n              </div>\n              ` : ''}\n              \n              ${formData.company ? `\n              <div class=\"info-card\">\n                <div class=\"info-label\">🏢 Company</div>\n                <div class=\"info-value\">${formData.company}</div>\n              </div>\n              ` : ''}\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">🎯 Service Interest</div>\n                <div class=\"service-badge\">${serviceLabel}</div>\n              </div>\n            </div>\n            \n            <div class=\"message-section\">\n              <div class=\"message-label\">\n                💬 Project Details\n              </div>\n              <div class=\"message-content\">\n                ${formData.message.replace(/\\n/g, '<br>')}\n              </div>\n            </div>\n            \n            <div class=\"stats-grid\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">500+</div>\n                <div class=\"stat-label\">Projects Delivered</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">50+</div>\n                <div class=\"stat-label\">Happy Clients</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">24/7</div>\n                <div class=\"stat-label\">Support</div>\n              </div>\n            </div>\n            \n            <div class=\"cta-section\">\n              <div class=\"cta-title\">Ready to respond to this inquiry?</div>\n              <a href=\"mailto:${formData.email}?subject=Re: ${EMAIL_CONFIG.subjectPrefix}${serviceLabel}\" class=\"cta-button\">\n                📧 Reply to ${formData.name}\n              </a>\n              <p style=\"margin: 15px 0 0 0; font-size: 14px; color: #64748b;\">\n                Click the button above to send a direct reply\n              </p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <div class=\"techpillar-logo\">TechPillar</div>\n            <h3>Technology Solutions</h3>\n            <p><strong>This inquiry was sent from the TechPillar contact form</strong></p>\n            <p>📅 Received on ${timestamp}</p>\n            <p>📍 Form submitted from TechPillar website</p>\n            <p>🌐 <a href=\"https://techpillar.com\" style=\"color: #667eea;\">techpillar.com</a></p>\n            <hr style=\"border: none; border-top: 1px solid #475569; margin: 20px 0;\">\n            <p style=\"font-size: 12px; opacity: 0.7;\">\n              Empowering businesses through innovative technology solutions\n            </p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n🚀 NEW SERVICE INQUIRY - TechPillar\n\n🔥 HIGH PRIORITY INQUIRY\n\nCONTACT INFORMATION:\n👤 Contact Person: ${formData.name}\n📧 Email Address: ${formData.email}\n${formData.phone ? `📱 Phone Number: ${formData.countryCode ? `${formData.countryCode} ${formData.phone}` : formData.phone}\\n` : ''}${formData.company ? `🏢 Company: ${formData.company}\\n` : ''}🎯 Service Interest: ${serviceLabel}\n\nPROJECT DETAILS:\n${formData.message}\n\n---\n📅 Received on: ${timestamp}\n📍 Form submitted from TechPillar website\n🌐 techpillar.com\n\nTechPillar Technology Solutions\nEmpowering businesses through innovative technology\n    `\n  };\n};\n\n// Main email sending function using EmailJS\nexport const sendContactFormEmail = async (formData, serviceOptions) => {\n  try {\n    // TEST MODE: If enabled, just simulate email sending\n    if (TEST_MODE) {\n      console.log('🧪 TEST MODE: Simulating email sending...');\n      \n      const emailData = generateEmailTemplate(formData, serviceOptions);\n      \n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      console.log('📧 TEST MODE: Email would be sent to:', emailData.to);\n      console.log('📧 TEST MODE: Subject:', emailData.subject);\n      console.log('📧 TEST MODE: From:', formData.email);\n      console.log('📧 TEST MODE: Service:', serviceOptions.find(opt => opt.value === formData.service)?.label);\n      console.log('📧 TEST MODE: Message:', formData.message);\n      \n      // Show alert with email details (for testing)\n      alert(`🧪 TEST MODE: Email would be sent to techpillaritsolutions@gmail.com\\n\\nSubject: ${emailData.subject}\\nFrom: ${formData.email}\\nService: ${serviceOptions.find(opt => opt.value === formData.service)?.label}\\n\\nTo get real emails, follow the setup guide in QUICK_EMAIL_SETUP.md`);\n      \n      return {\n        success: true,\n        message: 'Email simulation completed (TEST MODE)',\n        emailData\n      };\n    }\n    \n    // REAL EMAIL MODE: Use EmailJS\n    console.log('📧 Preparing to send email via EmailJS...');\n    \n    // Check if EmailJS is properly configured\n    if (EMAILJS_CONFIG.serviceId === 'service_techpillar' || \n        EMAILJS_CONFIG.templateId === 'template_techpillar' || \n        EMAILJS_CONFIG.userId === 'user_techpillar') {\n      throw new Error('EmailJS not configured. Please update the EMAILJS_CONFIG with your real IDs.');\n    }\n    \n    // Prepare template parameters for EmailJS\n    const templateParams = {\n      to_email: EMAIL_CONFIG.to,\n      from_name: formData.name,\n      from_email: formData.email,\n      from_phone: formData.countryCode ? `${formData.countryCode} ${formData.phone}` : formData.phone,\n      company: formData.company || 'Individual',\n      service: serviceOptions.find(opt => opt.value === formData.service)?.label || formData.service,\n      message: formData.message,\n      reply_to: formData.email,\n      subject: `${EMAIL_CONFIG.subjectPrefix}${serviceOptions.find(opt => opt.value === formData.service)?.label || formData.service} - ${formData.company || 'Individual'}`\n    };\n    \n    console.log('📧 Template parameters:', templateParams);\n    \n    // Send email using EmailJS\n    const result = await emailjs.send(\n      EMAILJS_CONFIG.serviceId,\n      EMAILJS_CONFIG.templateId,\n      templateParams,\n      EMAILJS_CONFIG.userId\n    );\n    \n    console.log('✅ Email sent successfully via EmailJS:', result);\n    \n    return {\n      success: true,\n      message: 'Email sent successfully via EmailJS',\n      result\n    };\n    \n  } catch (error) {\n    console.error('❌ Error sending email via EmailJS:', error);\n    \n    // Fallback: Try to send using the old method (simulation)\n    console.log('🔄 Falling back to simulation...');\n    \n    try {\n      const emailData = generateEmailTemplate(formData, serviceOptions);\n      \n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      console.log('📧 Email data prepared (simulation):', {\n        to: emailData.to,\n        subject: emailData.subject,\n        from: emailData.from,\n        replyTo: emailData.replyTo\n      });\n      \n      return {\n        success: true,\n        message: 'Email simulation completed (EmailJS not configured)',\n        emailData\n      };\n      \n    } catch (fallbackError) {\n      console.error('❌ Fallback also failed:', fallbackError);\n      throw new Error('Failed to send email. Please check EmailJS configuration or contact support.');\n    }\n  }\n};\n\n// Alternative: Simple text email for basic email clients\nexport const generateSimpleEmailTemplate = (formData, serviceOptions) => {\n  const serviceLabel = serviceOptions.find(opt => opt.value === formData.service)?.label || formData.service;\n  \n  return {\n    to: EMAIL_CONFIG.to,\n    from: EMAIL_CONFIG.from,\n    replyTo: formData.email,\n    subject: `${EMAIL_CONFIG.subjectPrefix}${serviceLabel} - ${formData.company || 'Individual'}`,\n    text: `\nNew Service Inquiry from TechPillar Website\n\nContact Information:\n- Name: ${formData.name}\n- Email: ${formData.email}\n${formData.company ? `- Company: ${formData.company}\\n` : ''}- Service: ${serviceLabel}\n\nMessage:\n${formData.message}\n\n---\nSent on: ${new Date().toLocaleDateString()}\nReply to: ${formData.email}\n    `\n  };\n};\n\n// Enrollment email template generator\nexport const generateEnrollmentTemplate = (formData) => {\n  const timestamp = new Date().toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  return {\n    to: EMAIL_CONFIG.to,\n    from: EMAIL_CONFIG.from,\n    replyTo: formData.email, // Allow direct reply to the student\n    subject: `🎓 New Course Enrollment - ${formData.course} - TechPillar Academy`,\n    html: `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>New Course Enrollment - TechPillar Academy</title>\n        <style>\n          * { margin: 0; padding: 0; box-sizing: border-box; }\n          \n          body { \n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; \n            line-height: 1.6; \n            color: #1a202c; \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            margin: 0; \n            padding: 20px;\n          }\n          \n          .email-container { \n            max-width: 650px; \n            margin: 0 auto; \n            background: white;\n            border-radius: 20px;\n            overflow: hidden;\n            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\n            border: 1px solid rgba(255, 255, 255, 0.2);\n          }\n          \n          .header { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 40px 30px; \n            text-align: center; \n            position: relative;\n            overflow: hidden;\n          }\n          \n          .header::before {\n            content: '';\n            position: absolute;\n            top: -50%;\n            left: -50%;\n            width: 200%;\n            height: 200%;\n            background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"25\" cy=\"25\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"75\" cy=\"75\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"50\" cy=\"10\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"10\" cy=\"60\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"90\" cy=\"40\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>');\n            opacity: 0.3;\n            animation: float 20s ease-in-out infinite;\n          }\n          \n          @keyframes float {\n            0%, 100% { transform: translateY(0px) rotate(0deg); }\n            50% { transform: translateY(-20px) rotate(180deg); }\n          }\n          \n          .header h1 { \n            margin: 0 0 15px 0; \n            font-size: 32px; \n            font-weight: 800;\n            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header p { \n            margin: 0; \n            font-size: 18px; \n            opacity: 0.95;\n            font-weight: 300;\n            position: relative;\n            z-index: 2;\n          }\n          \n          .header-icon {\n            font-size: 48px;\n            margin-bottom: 20px;\n            display: block;\n            position: relative;\n            z-index: 2;\n            animation: bounce 2s ease-in-out infinite;\n          }\n          \n          @keyframes bounce {\n            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n            40% { transform: translateY(-10px); }\n            60% { transform: translateY(-5px); }\n          }\n          \n          .content { \n            padding: 40px 30px; \n            background: white;\n          }\n          \n          .enrollment-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #10b981, #059669);\n            color: white;\n            padding: 8px 20px;\n            border-radius: 25px;\n            font-size: 14px;\n            font-weight: 600;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 30px;\n            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);\n            animation: pulse 2s infinite;\n          }\n          \n          @keyframes pulse {\n            0% { box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3); }\n            50% { box-shadow: 0 4px 25px rgba(16, 185, 129, 0.6); }\n            100% { box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3); }\n          }\n          \n          .info-grid {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 20px;\n            margin-bottom: 30px;\n          }\n          \n          .info-card {\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            padding: 20px;\n            border-radius: 15px;\n            border-left: 4px solid #667eea;\n            transition: all 0.3s ease;\n          }\n          \n          .info-card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.15);\n          }\n          \n          .info-label {\n            font-size: 12px;\n            font-weight: 600;\n            color: #64748b;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 8px;\n          }\n          \n          .info-value {\n            font-size: 16px;\n            font-weight: 600;\n            color: #1e293b;\n          }\n          \n          .course-badge {\n            display: inline-block;\n            background: linear-gradient(135deg, #667eea, #764ba2);\n            color: white;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 16px;\n            font-weight: 600;\n            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n          }\n          \n          .message-section {\n            background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n            padding: 25px;\n            border-radius: 15px;\n            margin-bottom: 30px;\n            border: 1px solid #e2e8f0;\n          }\n          \n          .message-label {\n            font-size: 14px;\n            font-weight: 600;\n            color: #475569;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            margin-bottom: 15px;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          \n          .message-content {\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            border-left: 4px solid #667eea;\n            font-size: 16px;\n            line-height: 1.6;\n            color: #334155;\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n          }\n          \n          .academy-stats {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 20px;\n            margin: 30px 0;\n          }\n          \n          .stat-item {\n            text-align: center;\n            padding: 20px;\n            background: rgba(102, 126, 234, 0.1);\n            border-radius: 15px;\n            backdrop-filter: blur(10px);\n          }\n          \n          .stat-number {\n            font-size: 28px;\n            font-weight: 800;\n            color: #667eea;\n            margin-bottom: 5px;\n          }\n          \n          .stat-label {\n            font-size: 12px;\n            color: #94a3b8;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n          }\n          \n          .cta-section { \n            text-align: center; \n            margin: 40px 0; \n            padding: 30px;\n            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);\n            border-radius: 20px;\n            border: 2px solid #e2e8f0;\n          }\n          \n          .cta-title {\n            font-size: 24px;\n            font-weight: 700;\n            color: #1e293b;\n            margin-bottom: 20px;\n          }\n          \n          .cta-button { \n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white; \n            padding: 18px 36px; \n            text-decoration: none; \n            border-radius: 50px; \n            display: inline-block; \n            font-weight: 600;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n            border: none;\n            cursor: pointer;\n          }\n          \n          .cta-button:hover { \n            transform: translateY(-3px);\n            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.4);\n          }\n          \n          .footer { \n            text-align: center; \n            margin-top: 40px; \n            color: #64748b; \n            font-size: 14px; \n            padding: 30px;\n            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n            color: white;\n          }\n          \n          .footer h3 {\n            color: #f8fafc;\n            margin-bottom: 15px;\n            font-size: 18px;\n          }\n          \n          .footer p {\n            margin: 8px 0;\n            opacity: 0.8;\n          }\n          \n          .techpillar-logo {\n            font-size: 24px;\n            font-weight: 800;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            -webkit-background-clip: text;\n            -webkit-text-fill-color: transparent;\n            background-clip: text;\n            margin-bottom: 10px;\n          }\n          \n          @media (max-width: 600px) {\n            .info-grid { grid-template-columns: 1fr; }\n            .academy-stats { grid-template-columns: 1fr; }\n            .header h1 { font-size: 24px; }\n            .content { padding: 20px; }\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"email-container\">\n          <div class=\"header\">\n            <span class=\"header-icon\">🎓</span>\n            <h1>New Course Enrollment</h1>\n            <p>TechPillar Academy has received a new enrollment request</p>\n          </div>\n          \n          <div class=\"content\">\n            <div style=\"text-align: center; margin-bottom: 30px;\">\n              <div class=\"enrollment-badge\">🎯 New Student Enrollment</div>\n            </div>\n            \n            <div class=\"info-grid\">\n              <div class=\"info-card\">\n                <div class=\"info-label\">👤 Student Name</div>\n                <div class=\"info-value\">${formData.name}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">📧 Email Address</div>\n                <div class=\"info-value\">${formData.email}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">📱 Phone Number</div>\n                <div class=\"info-value\">${formData.phone}</div>\n              </div>\n              \n              <div class=\"info-card\">\n                <div class=\"info-label\">🎯 Selected Course</div>\n                <div class=\"course-badge\">${formData.course}</div>\n              </div>\n            </div>\n            \n            ${formData.address ? `\n            <div class=\"info-card\" style=\"grid-column: 1 / -1;\">\n              <div class=\"info-label\">📍 Address</div>\n              <div class=\"info-value\">${formData.address}</div>\n            </div>\n            ` : ''}\n            \n            <div class=\"message-section\">\n              <div class=\"message-label\">\n                💭 Student Goals & Expectations\n              </div>\n              <div class=\"message-content\">\n                ${formData.message.replace(/\\n/g, '<br>')}\n              </div>\n            </div>\n            \n            <div class=\"academy-stats\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">500+</div>\n                <div class=\"stat-label\">Students Trained</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">25+</div>\n                <div class=\"stat-label\">Expert Instructors</div>\n              </div>\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">95%</div>\n                <div class=\"stat-label\">Placement Rate</div>\n              </div>\n            </div>\n            \n            <div class=\"cta-section\">\n              <div class=\"cta-title\">Ready to welcome this student?</div>\n              <a href=\"mailto:${formData.email}?subject=Welcome to TechPillar Academy - ${formData.course}\" class=\"cta-button\">\n                📧 Welcome ${formData.name}\n              </a>\n              <p style=\"margin: 15px 0 0 0; font-size: 14px; color: #64748b;\">\n                Click the button above to send a welcome message\n              </p>\n            </div>\n          </div>\n          \n          <div class=\"footer\">\n            <div class=\"techpillar-logo\">TechPillar Academy</div>\n            <h3>Empowering Future Tech Leaders</h3>\n            <p><strong>This enrollment was submitted from the TechPillar Academy website</strong></p>\n            <p>📅 Received on ${timestamp}</p>\n            <p>📍 Form submitted from TechPillar Academy</p>\n            <p>🌐 <a href=\"https://techpillar.com/academy\" style=\"color: #667eea;\">techpillar.com/academy</a></p>\n            <hr style=\"border: none; border-top: 1px solid #475569; margin: 20px 0;\">\n            <p style=\"font-size: 12px; opacity: 0.7;\">\n              Transforming careers through cutting-edge technology education\n            </p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `,\n    text: `\n🎓 NEW COURSE ENROLLMENT - TechPillar Academy\n\n🎯 NEW STUDENT ENROLLMENT\n\nSTUDENT INFORMATION:\n👤 Student Name: ${formData.name}\n📧 Email Address: ${formData.email}\n📱 Phone Number: ${formData.phone}\n🎯 Selected Course: ${formData.course}\n${formData.address ? `📍 Address: ${formData.address}\\n` : ''}\n\nSTUDENT GOALS & EXPECTATIONS:\n${formData.message}\n\n---\n📅 Received on: ${timestamp}\n📍 Form submitted from TechPillar Academy\n🌐 techpillar.com/academy\n\nTechPillar Academy\nEmpowering Future Tech Leaders\n    `\n  };\n};\n\n// Send enrollment email\nexport const sendEnrollmentEmail = async (formData) => {\n  if (TEST_MODE) {\n    console.log('🧪 TEST MODE: Enrollment email would be sent with:', formData);\n    return Promise.resolve();\n  }\n\n  // Check if EmailJS is properly configured\n  if (EMAILJS_CONFIG.serviceId === 'service_techpillar' || \n      EMAILJS_CONFIG.templateId === 'template_techpillar' || \n      EMAILJS_CONFIG.userId === 'user_techpillar') {\n    throw new Error('EmailJS not properly configured. Please update the configuration in emailService.js');\n  }\n\n  try {\n    const templateParams = {\n      to_email: EMAIL_CONFIG.to,\n      from_name: formData.name,\n      from_email: formData.email,\n      from_phone: formData.phone,\n      course: formData.course,\n      address: formData.address || 'Not provided',\n      message: formData.message,\n      subject: `🎓 New Course Enrollment - ${formData.course} - TechPillar Academy`\n    };\n\n    const response = await emailjs.send(\n      EMAILJS_CONFIG.serviceId,\n      EMAILJS_CONFIG.templateId,\n      templateParams,\n      EMAILJS_CONFIG.userId\n    );\n\n    console.log('✅ Enrollment email sent successfully:', response);\n    return response;\n  } catch (error) {\n    console.error('❌ Failed to send enrollment email:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}